#include <iostream>
#include <string>
using namespace std;

/*
* 继承
* 
* 一、子类继承成员变量的访问权限
* class 子类 : 继承方式 父类 { }
* 子类 ： 派生类
* 父类 ： 基类
* 继承方式 ： public / protected / private
* 
* 3*3=9
*                 |                     父类访问权限                 |
* 继				  |	    public     |	 protected    |   private   |
* 承		public    |     public     |	 protected    |   无法访问   |
* 方		protected |     protected  |	 protected    |   无法访问   |
* 式		private   |     private    |	 private      |   无法访问   |
* 
* 
* 二、构造析构函数调用时机
* 1、当创建子类对象时，先调用父类的构造函数，再调用子类的构造函数。
* 2、当销毁子类对象时，先调用子类的析构函数，再调用父类的析构函数。
* 
* 三、同名属性访问
* 1、如果子类和父类有同名属性，访问时会优先访问子类的属性。
* 2、如果需要访问父类的同名属性，可以使用作用域解析运算符（::）来指定访问父类的属性。
* 
* 四、同名函数访问
* 1、如果子类和父类有同名函数，访问时会优先访问子类的函数。
* 2、如果需要访问父类的同名函数，可以使用作用域解析运算符（::）来指定访问父类的函数。
* 
* 五、多继承
* 1、C++支持多继承，即一个子类可以有多个父类。
* 2、多继承时需要注意命名冲突和二义性问题。同名属性或函数需要使用作用域解析运算符（::）来指定访问哪个父类的成员。
* 
*/

int main() {

	return 0;
}